name: SonarCloud Analysis

on:
  workflow_dispatch:  # Manually trigger the workflow
    inputs:
      repo:
        description: Which repository should be analysed?
        required: true
        type: choice
        default: '(all)'
        options:
          - '(all)'
          - Applifting/Humansis
          - collective/icalendar
          - cortezaproject/corteza
          - cortezaproject/corteza-server-corredor
          - getgrav/grav
          - getgrav/grav-plugin-admin
          - getgrav/grav-plugin-editor-buttons
          - getgrav/grav-plugin-email
          - getgrav/grav-plugin-error
          - getgrav/grav-plugin-featherlight
          - getgrav/grav-plugin-form
          - getgrav/grav-plugin-langswitcher
          - getgrav/grav-plugin-login
          - getgrav/grav-plugin-markdown-notices
          - getgrav/grav-plugin-problems
          - getgrav/grav-plugin-youtube
          - Gnucash/gnucash
          - hibbitts-design/grav-plugin-external-links
          - intiface/intiface-central
          - intiface/intiface-engine
          - intiface/intiface-game-haptics-router
          - jazzband/icalevents
          - kalkulacka-one/kalkulacka
          - KohoVolit/Mandaty.cz
          - KohoVolit/NapisteJim
          - KohoVolit/partmonitor.hu
          - LibreHealthIO/lh-ehr
          - LibreHealthIO/lh-ehr-laravel
          - metlo-labs/csp-report-listener
          - openstreetmap/iD
          - openstreetmap/openstreetmap-website
          - rolling-cz/cistky-minihra
          - rolling-cz/cistky-obvineni
          - rolling-cz/cistky-politiky
          - rolling-cz/konec-dejin
          - rolling-cz/moirai
          - rolling-cz/orloj-2.0
          - SeanFranklin/hemaScorecard
          - trilbymedia/grav-plugin-flex-objects
          - windirstat/windirstat
          - zegkljan/scorer
          - zegkljan/videoreferee
  schedule:  # On a schedule - UTC
    - cron: '0 10 * * 5'

jobs:

  produce-matrix-items:
    runs-on: ubuntu-latest
    outputs:
      filtered_config: ${{ steps.set_output.outputs.filtered_config }}
    steps:
      - name: Set script as output
        id: set_output
        run: |
          url="https://raw.githubusercontent.com/SecurityCheckBox/SecurityCheckBox/refs/heads/main/.github/workflows/produce_matrix_items.sh"
          script="$(curl -sSL "${url}")" || exit "${?}"
          config="$(bash -s -- "${{ github.event_name }}" "${{ github.event.inputs.repo }}" <<<"${script}")" || exit "${?}"
          filtered_config="$(jq -c . <<<"${config}")" || exit "${?}"
          echo "${filtered_config}"
          echo "filtered_config=${filtered_config}" >>"${GITHUB_OUTPUT}"

  sc-a:
    runs-on: ubuntu-latest
    needs: [produce-matrix-items]
    strategy:
      matrix:
        config: ${{ fromJson(needs.produce-matrix-items.outputs.filtered_config) }}
    steps:

      - name: Checkout ${{ matrix.config.githubRepo }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          repository: '${{ matrix.config.githubRepo }}'
          path: '${{ matrix.config.githubRepo }}'  # Checkout each repo in a unique path

      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: matrix.config.requiresNodeJs

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        if: matrix.config.requiresNodeJs
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.config.githubRepo }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.githubRepo }}-npm-

      - name: Run npm install
        if: matrix.config.requiresNodeJs
        working-directory: '${{ matrix.config.githubRepo }}'
        run: find . -name package.json -exec bash -c '( cd "$(dirname "{}")" ; printf '%s\n' "----" "{}" ; npm install ; )' \;

      - name: Setup JDK
        uses: actions/setup-java@v4
        if: matrix.config.jdkVersion > 0
        with:
          java-version: ${{ matrix.config.jdkVersion }}
          distribution: 'temurin'

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        if: matrix.config.rustSource != '-'

      - name: Install system dependencies for Rust
        if: matrix.config.rustSource != '-'
        run: sudo apt-get install -y libdbus-1-dev pkg-config libudev-dev

      - name: Cache Rust build artifacts
        uses: actions/cache@v4
        if: matrix.config.rustSource != '-'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            '${{ matrix.config.rustSource }}/target/release'
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust dependencies
        if: matrix.config.rustSource != '-'
        working-directory: '${{ matrix.config.rustSource }}'
        run: cargo build --release
        env:
          RUSTFLAGS: ''

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        if: matrix.config.analysisMethod == 'maven'
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-${{ matrix.config.githubRepo }}-sonar-${{ hashFiles('**/sonar-project.properties') }}
          restore-keys: ${{ runner.os }}-${{ matrix.config.githubRepo }}-sonar-

      - name: Cache Maven packages
        uses: actions/cache@v4
        if: matrix.config.analysisMethod == 'maven'
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ matrix.config.githubRepo }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.config.githubRepo }}-m2-

      - name: Cache Maven build outputs
        uses: actions/cache@v4
        if: matrix.config.analysisMethod == 'maven'
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.config.githubRepo }}-maven-target-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.githubRepo }}-maven-target-

      - name: Build Maven and analyze
        if: matrix.config.analysisMethod == 'maven'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: '${{ matrix.config.githubRepo }}'
        run: mvn -B verify -DskipTests=true org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=security-check-box -Dsonar.projectKey=${{ matrix.config.sonarProjectKey }}

      - name: Run SonarCloud Analysis
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: matrix.config.analysisMethod == 'default'
        with:
          projectBaseDir: '${{ matrix.config.githubRepo }}'
          args: >
            -Dsonar.organization=security-check-box
            -Dsonar.projectName=${{ matrix.config.githubRepo }}
            -Dsonar.projectKey=${{ matrix.config.sonarProjectKey }}
            -Dsonar.c.file.suffixes=-
            -Dsonar.cpp.file.suffixes=-
            -Dsonar.objc.file.suffixes=-
