name: SonarCloud Analysis

on:
  workflow_dispatch:  # Manually trigger the workflow
    inputs:
      repo:
        description: Which repository should be analysed?
        required: true
        type: choice
        default: '(all)'
        options:
          - '(all)'
          - Applifting/Humansis
          - cortezaproject/corteza
          - Gnucash/gnucash
          - kalkulacka-one/kalkulacka
          - KohoVolit/Mandaty.cz
          - KohoVolit/NapisteJim
          - KohoVolit/partmonitor.hu
          - LibreHealthIO/lh-ehr
          - SeanFranklin/hemaScorecard
          - zegkljan/scorer
          - zegkljan/videoreferee
  schedule:  # On a schedule
    - cron: '0 16 * * 4'

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - githubRepo: Applifting/Humansis
            sonarProjectKey: security-check-box_humansis
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: cortezaproject/corteza
            sonarProjectKey: security-check-box_corteza
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: Gnucash/gnucash
            sonarProjectKey: security-check-box_gnucash
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: kalkulacka-one/kalkulacka
            sonarProjectKey: security-check-box_volebni-kalkulacka
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: KohoVolit/Mandaty.cz
            sonarProjectKey: security-check-box_mandaty-cz
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: KohoVolit/NapisteJim
            sonarProjectKey: security-check-box_napiste-jim
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: KohoVolit/partmonitor.hu
            sonarProjectKey: security-check-box_voksmonitor-hu
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: LibreHealthIO/lh-ehr
            sonarProjectKey: security-check-box_libre-health-ehr
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: SeanFranklin/hemaScorecard
            sonarProjectKey: security-check-box_hema-score-card
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: zegkljan/scorer
            sonarProjectKey: security-check-box_scorer
            enabled: true
            requiresNodeJs: true
            jdkVersion: 0
            analyze: 'default'
          - githubRepo: zegkljan/videoreferee
            sonarProjectKey: security-check-box_video-referee
            enabled: true
            requiresNodeJs: false
            jdkVersion: 0
            analyze: 'default'
#          - githubRepo: 'org1/repo1' # GitHub organization/repozitory name
#            sonarProjectKey: 's_pk1' # SonarCloud project key
#            enabled: true            # Whether the scheduled analysis of this repo is enabled
#            requiresNodeJs: false    # Whether to setup Node.js and run `npm install`
#            jdkVersion: 17           # JDK version if required or 0 otherwise
#            analyze: 'default'       # Analysis method
    steps:
      - name: Check skipping conditions
        id: check_skipping_conditions
        run: |
          case "${{ github.event_name }}" in 
          'schedule')
            if ! "${{ matrix.config.enabled }}"; then
              echo "Scheduled analysis disabled for this repo."
              echo "do_analysis=false" >> $GITHUB_ENV
              exit 0
            fi
            LAST_COMMIT_DATE="$(curl -s \
              "https://api.github.com/repos/${{ matrix.config.githubRepo }}/commits?per_page=1" | \
              jq -r '.[0].commit.committer.date')"
            # Convert to Unix timestamp for comparison
            LAST_COMMIT_TIMESTAMP=$(date -d "$LAST_COMMIT_DATE" +%s)
            CURRENT_TIMESTAMP=$(date +%s)
            # Calculate age in days
            AGE_IN_DAYS=$(( (CURRENT_TIMESTAMP - LAST_COMMIT_TIMESTAMP) / 86400 ))
            echo "Last commit age: $AGE_IN_DAYS days"
            if [ "$AGE_IN_DAYS" -gt 8 ]; then
              echo "do_analysis=false" >> $GITHUB_ENV
              exit 0
            else
              echo "do_analysis=true" >> $GITHUB_ENV
              exit 0
            fi
          ;;
          'workflow_dispatch')
            case "${{ github.event.inputs.repo }}" in
            '(all)' | "${{ matrix.config.githubRepo }}")
              echo "Manual run for this repo '${{ github.event.inputs.repo }}'."
              echo "do_analysis=true" >> $GITHUB_ENV
              exit 0
            ;;
            *)
              echo "Manual run for another repo '${{ github.event.inputs.repo }}'."
              echo "do_analysis=false" >> $GITHUB_ENV
              exit 0
            ;;
            esac
          ;;
          *)
            echo "WARNING: Unexpected GitHub event name '${{ github.event_name }}'."
            echo "do_analysis=true" >> $GITHUB_ENV
            exit 0
          ;;
          esac

      - name: Checkout ${{ matrix.config.githubRepo }}
        uses: actions/checkout@v4
        if: env.do_analysis == 'true'
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          repository: '${{ matrix.config.githubRepo }}'
          path: '${{ matrix.config.githubRepo }}'  # Checkout each repo in a unique path

      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: env.do_analysis == 'true' && matrix.config.requiresNodeJs

      - name: Run npm install
        if: env.do_analysis == 'true' && matrix.config.requiresNodeJs
        run: npm install
        working-directory: '${{ matrix.config.githubRepo }}'

      - name: Setup JDK
        uses: actions/setup-java@v4
        if: env.do_analysis == 'true' && matrix.config.jdkVersion > 0
        with:
          java-version: ${{ matrix.config.jdkVersion }}
          distribution: 'temurin'
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        if: env.do_analysis == 'true' && matrix.config.analyze == 'maven'
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        if: env.do_analysis == 'true' && matrix.config.analyze == 'maven'
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Maven and analyze
        if: env.do_analysis == 'true' && matrix.config.analyze == 'maven'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: '${{ matrix.config.githubRepo }}'
        run: mvn -B verify -DskipTests=true org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=security-check-box -Dsonar.projectKey=${{ matrix.config.sonarProjectKey }}

      - name: Run SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: env.do_analysis == 'true' && matrix.config.analyze == 'default'
        with:
          projectBaseDir: '${{ matrix.config.githubRepo }}'
          args: >
            -Dsonar.organization=security-check-box
            -Dsonar.projectKey=${{ matrix.config.sonarProjectKey }}
            -Dsonar.c.file.suffixes=-
            -Dsonar.cpp.file.suffixes=-
            -Dsonar.objc.file.suffixes=-
